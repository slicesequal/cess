
syntax = "proto3";

import "google/protobuf/empty.proto";

package handover_api;

// The Handover service definition.
service HandoverServerApi {
  // Key Handover Server: Get challenge for worker key and master key handover from another ceSeal
  rpc CreateChallenge (google.protobuf.Empty) returns (HandoverChallenge) {}

  // Key Handover Server: Get worker key and master key with RA report on challenge from another ceSeal
  rpc Start (HandoverChallengeResponse) returns (HandoverKeyStaffs) {}

  // Shutdown handover server after handover done
  rpc Shutdown(google.protobuf.Empty) returns(google.protobuf.Empty) {}
}

message Attestation {
  string provider = 1;
  optional bytes encoded_report = 2;
  uint64 timestamp = 3;
}

message HandoverChallenge {
  // @codec scale ces_types::HandoverChallenge<BlockNumber>
  bytes encoded_challenge = 1;
}

message HandoverChallengeResponse {
  // @codec scale ces_types::ChallengeHandlerInfo<BlockNumber>
  bytes encoded_challenge_handler = 1;
  // The sgx attestation on the challenge handler hash
  Attestation attestation = 2;
}

message HandoverKeyStaffs {
  // @codec scale ces_types::EncryptedKeyStaffs
  bytes encoded_key_staffs = 1;
  // The sgx attestation on the encrypted worker key hash
  Attestation attestation = 2;
}